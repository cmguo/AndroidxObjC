//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: androidx/annotation/annotation/src/main/java/androidx/annotation/RequiresApi.java
//

#include "J2ObjC_header.h"

#pragma push_macro("INCLUDE_ALL_AndroidxAnnotationRequiresApi")
#ifdef RESTRICT_AndroidxAnnotationRequiresApi
#define INCLUDE_ALL_AndroidxAnnotationRequiresApi 0
#else
#define INCLUDE_ALL_AndroidxAnnotationRequiresApi 1
#endif
#undef RESTRICT_AndroidxAnnotationRequiresApi

#if __has_feature(nullability)
#pragma clang diagnostic push
#pragma GCC diagnostic ignored "-Wnullability"
#pragma GCC diagnostic ignored "-Wnullability-completeness"
#endif

#if !defined (AXRequiresApi_) && (INCLUDE_ALL_AndroidxAnnotationRequiresApi || defined(INCLUDE_AXRequiresApi))
#define AXRequiresApi_

#define RESTRICT_JavaLangAnnotationAnnotation 1
#define INCLUDE_JavaLangAnnotationAnnotation 1
#include "java/lang/annotation/Annotation.h"

@class IOSClass;

@protocol AXRequiresApi < JavaLangAnnotationAnnotation >

@property (readonly) jint value;
@property (readonly) jint api;

- (jboolean)isEqual:(id)obj;

- (NSUInteger)hash;

@end

@interface AXRequiresApi : NSObject < AXRequiresApi > {
 @public
  jint value_;
  jint api_;
}

@end

J2OBJC_EMPTY_STATIC_INIT(AXRequiresApi)

FOUNDATION_EXPORT id<AXRequiresApi> create_AXRequiresApi(jint api, jint value);

J2OBJC_TYPE_LITERAL_HEADER(AXRequiresApi)

#define AndroidxAnnotationRequiresApi AXRequiresApi

#endif


#if __has_feature(nullability)
#pragma clang diagnostic pop
#endif
#pragma pop_macro("INCLUDE_ALL_AndroidxAnnotationRequiresApi")
