//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: androidx/lifecycle/lifecycle-livedata/src/main/java/androidx/lifecycle/ComputableLiveData.java
//

#include "J2ObjC_header.h"

#pragma push_macro("INCLUDE_ALL_AndroidxLifecycleComputableLiveData")
#ifdef RESTRICT_AndroidxLifecycleComputableLiveData
#define INCLUDE_ALL_AndroidxLifecycleComputableLiveData 0
#else
#define INCLUDE_ALL_AndroidxLifecycleComputableLiveData 1
#endif
#undef RESTRICT_AndroidxLifecycleComputableLiveData

#if __has_feature(nullability)
#pragma clang diagnostic push
#pragma GCC diagnostic ignored "-Wnullability"
#pragma GCC diagnostic ignored "-Wnullability-completeness"
#endif

#if !defined (AXComputableLiveData_) && (INCLUDE_ALL_AndroidxLifecycleComputableLiveData || defined(INCLUDE_AXComputableLiveData))
#define AXComputableLiveData_

@class AXLiveData;
@class JavaUtilConcurrentAtomicAtomicBoolean;
@protocol JavaLangRunnable;
@protocol JavaUtilConcurrentExecutor;

@interface AXComputableLiveData : NSObject {
 @public
  id<JavaUtilConcurrentExecutor> mExecutor_;
  __unsafe_unretained AXLiveData *mLiveData_;
  JavaUtilConcurrentAtomicAtomicBoolean *mInvalid_;
  JavaUtilConcurrentAtomicAtomicBoolean *mComputing_;
  id<JavaLangRunnable> mRefreshRunnable_;
  id<JavaLangRunnable> mInvalidationRunnable_;
}

#pragma mark Public

- (instancetype __nonnull)init;

- (instancetype __nonnull)initWithJavaUtilConcurrentExecutor:(id<JavaUtilConcurrentExecutor> __nonnull)executor;

- (AXLiveData * __nonnull)getLiveData;

- (void)invalidate;

#pragma mark Protected

- (id)compute;

@end

J2OBJC_EMPTY_STATIC_INIT(AXComputableLiveData)

J2OBJC_FIELD_SETTER(AXComputableLiveData, mExecutor_, id<JavaUtilConcurrentExecutor>)
J2OBJC_FIELD_SETTER(AXComputableLiveData, mInvalid_, JavaUtilConcurrentAtomicAtomicBoolean *)
J2OBJC_FIELD_SETTER(AXComputableLiveData, mComputing_, JavaUtilConcurrentAtomicAtomicBoolean *)
J2OBJC_FIELD_SETTER(AXComputableLiveData, mRefreshRunnable_, id<JavaLangRunnable>)
J2OBJC_FIELD_SETTER(AXComputableLiveData, mInvalidationRunnable_, id<JavaLangRunnable>)

FOUNDATION_EXPORT void AXComputableLiveData_init(AXComputableLiveData *self);

FOUNDATION_EXPORT void AXComputableLiveData_initWithJavaUtilConcurrentExecutor_(AXComputableLiveData *self, id<JavaUtilConcurrentExecutor> executor);

J2OBJC_TYPE_LITERAL_HEADER(AXComputableLiveData)

@compatibility_alias AndroidxLifecycleComputableLiveData AXComputableLiveData;

#endif


#if __has_feature(nullability)
#pragma clang diagnostic pop
#endif
#pragma pop_macro("INCLUDE_ALL_AndroidxLifecycleComputableLiveData")
