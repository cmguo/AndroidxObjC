//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: androidx/lifecycle/lifecycle-common/src/main/java/androidx/lifecycle/FullLifecycleObserverAdapter.java
//

#include "J2ObjC_header.h"

#pragma push_macro("INCLUDE_ALL_AndroidxLifecycleFullLifecycleObserverAdapter")
#ifdef RESTRICT_AndroidxLifecycleFullLifecycleObserverAdapter
#define INCLUDE_ALL_AndroidxLifecycleFullLifecycleObserverAdapter 0
#else
#define INCLUDE_ALL_AndroidxLifecycleFullLifecycleObserverAdapter 1
#endif
#undef RESTRICT_AndroidxLifecycleFullLifecycleObserverAdapter

#if __has_feature(nullability)
#pragma clang diagnostic push
#pragma GCC diagnostic ignored "-Wnullability"
#pragma GCC diagnostic ignored "-Wnullability-completeness"
#endif

#if !defined (AXFullLifecycleObserverAdapter_) && (INCLUDE_ALL_AndroidxLifecycleFullLifecycleObserverAdapter || defined(INCLUDE_AXFullLifecycleObserverAdapter))
#define AXFullLifecycleObserverAdapter_

#define RESTRICT_AndroidxLifecycleLifecycleEventObserver 1
#define INCLUDE_AXLifecycleEventObserver 1
#include "androidx/lifecycle/LifecycleEventObserver.h"

@class AXLifecycle_Event;
@protocol AXFullLifecycleObserver;
@protocol AXLifecycleOwner;

@interface AXFullLifecycleObserverAdapter : NSObject < AXLifecycleEventObserver >

#pragma mark Public

- (void)onStateChangedWithAXLifecycleOwner:(id<AXLifecycleOwner> __nonnull)source
                     withAXLifecycle_Event:(AXLifecycle_Event * __nonnull)event;

#pragma mark Package-Private

- (instancetype __nonnull)initPackagePrivateWithAXFullLifecycleObserver:(id<AXFullLifecycleObserver>)fullLifecycleObserver
                                           withAXLifecycleEventObserver:(id<AXLifecycleEventObserver>)lifecycleEventObserver;

// Disallowed inherited constructors, do not use.

- (instancetype __nonnull)init NS_UNAVAILABLE;

@end

J2OBJC_EMPTY_STATIC_INIT(AXFullLifecycleObserverAdapter)

FOUNDATION_EXPORT void AXFullLifecycleObserverAdapter_initPackagePrivateWithAXFullLifecycleObserver_withAXLifecycleEventObserver_(AXFullLifecycleObserverAdapter *self, id<AXFullLifecycleObserver> fullLifecycleObserver, id<AXLifecycleEventObserver> lifecycleEventObserver);

FOUNDATION_EXPORT AXFullLifecycleObserverAdapter *new_AXFullLifecycleObserverAdapter_initPackagePrivateWithAXFullLifecycleObserver_withAXLifecycleEventObserver_(id<AXFullLifecycleObserver> fullLifecycleObserver, id<AXLifecycleEventObserver> lifecycleEventObserver) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT AXFullLifecycleObserverAdapter *create_AXFullLifecycleObserverAdapter_initPackagePrivateWithAXFullLifecycleObserver_withAXLifecycleEventObserver_(id<AXFullLifecycleObserver> fullLifecycleObserver, id<AXLifecycleEventObserver> lifecycleEventObserver);

J2OBJC_TYPE_LITERAL_HEADER(AXFullLifecycleObserverAdapter)

@compatibility_alias AndroidxLifecycleFullLifecycleObserverAdapter AXFullLifecycleObserverAdapter;

#endif


#if __has_feature(nullability)
#pragma clang diagnostic pop
#endif
#pragma pop_macro("INCLUDE_ALL_AndroidxLifecycleFullLifecycleObserverAdapter")
